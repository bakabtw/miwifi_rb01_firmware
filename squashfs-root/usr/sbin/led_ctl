#!/bin/sh
# scripts layer from high to low: 
# 1. /usr/sbin/led_ctl : control router leds' light, called by luci request: < /api/misystem/led >
# 2. /usr/sbin/xqled   : control leds' light by call <gpio> script
# 3. /usr/sbin/gpio    : control leds' light by /sys/class/leds file

usage(){
    cat << EOF
usage: router led control:
       led_on  : light the router's leds
       led_off : make all leds to dark

       router led timer control:
       timer_on <hour of led_on time> <min of led_on time> <hour of led_off time> <min of led_off time>
       timer_off

EOF
    exit 255
}

led_on(){
    uci set xiaoqiang.common.BLUE_LED=1
    uci commit xiaoqiang

    [ -f /var/run/light_blink.status ] && ubus call wan_check blink_off > /dev/null 2>&1
    xqled sys_ok > /dev/null 2>&1
    [ -f /usr/sbin/wan_check.sh ] && /usr/sbin/wan_check.sh reset > /dev/null 2>&1
    [ -f /etc/init.d/scan ] && /etc/init.d/scan led_reset > /dev/null 2>&1
    timer_is_mesh_cap && mesh_cmd sync_lite > /dev/null 2>&1 &

    return
}

led_off(){
    uci set xiaoqiang.common.BLUE_LED=0
    uci commit xiaoqiang

    xqled sys_off > /dev/null 2>&1
    xqled func_of > /dev/null 2>&1
    xqled ant_off > /dev/null 2>&1
    ubus call wan_check blink_off > /dev/null 2>&1
    timer_is_mesh_cap && mesh_cmd sync_lite > /dev/null 2>&1 &

    return
}

timer_on(){
    local h_open="$1"
    local m_open="$2"
    local h_close="$3"
    local m_close="$4"
    local format="%s %s * * * %s"
    local script_open
    local script_close

    uci set xiaoqiang.common.BLUE_LED_TIMER=1
    uci set xiaoqiang.common.BLUE_LED_TIMER_OPEN="$h_open"":""$m_open"
    uci set xiaoqiang.common.BLUE_LED_TIMER_CLOSE="$h_close"":""$m_close"
    uci commit xiaoqiang

    grep -v "/usr/sbin/led_ctl" /etc/crontabs/root > /etc/crontabs/root.new

    script_open=$(printf "$format" "$m_open" "$h_open" "/usr/sbin/led_ctl led_on > /dev/null 2>&1")
    echo "$script_open" >> /etc/crontabs/root.new
    script_close=$(printf "$format" "$m_close" "$h_close" "/usr/sbin/led_ctl led_off > /dev/null 2>&1")
    echo "$script_close" >> /etc/crontabs/root.new

    mv /etc/crontabs/root.new /etc/crontabs/root
    /etc/init.d/cron restart
    return
}

timer_off(){
    uci set xiaoqiang.common.BLUE_LED_TIMER=0
    uci set xiaoqiang.common.BLUE_LED_TIMER_OPEN="00:00"
    uci set xiaoqiang.common.BLUE_LED_TIMER_CLOSE="00:00"
    uci commit xiaoqiang

    grep -v "/usr/sbin/led_ctl" /etc/crontabs/root > /etc/crontabs/root.new
    mv /etc/crontabs/root.new /etc/crontabs/root
    /etc/init.d/cron restart
    return
}

timer_is_mesh_cap(){
    local netmode
    local capmode

    netmode=$(uci -q get xiaoqiang.common.NETMODE)
    [ -z "$netmode" ] && return 1

    [ "${netmode:0:7}" = "whc_cap" ] && return 0
    if [ "${netmode:0:9}" = "lanapmode" ]; then
        capmode=$(uci -q get xiaoqiang.common.CAP_MODE)
        [ -n "$capmode" -a "$capmode" = "ap" ] && return 0
    fi

    return 1
}

# return local led status
#     true : light
#     false: dark
timer_get_led_status(){
    local local_status
    
    local_status=$(uci -q get xiaoqiang.common.BLUE_LED)
    [ -n "$local_status" -a "$local_status" = "0" ] && return 1
    return 0
}

#---------------- main ----------------#
NUM_PARAMS="$#"
case "$1" in
    "led_on" )
        [ "$NUM_PARAMS" != "1" ] && usage
        led_on
        ;;

    "led_off" )
        [ "$NUM_PARAMS" != "1" ] && usage
        led_off
        ;;

    "timer_on" )
        [ "$NUM_PARAMS" != "5" ] && usage
        timer_on "$2" "$3" "$4" "$5"
        ;;

    "timer_off" )
        [ "$NUM_PARAMS" != "1" ] && usage
        timer_off
        ;;

    * )
        usage
        ;;
esac
return

